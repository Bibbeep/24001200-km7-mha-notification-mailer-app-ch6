<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
</head>
<body>
    <h1>Reset Password</h1>
    <form id="reset-form" action="/api/reset-password" method="post">
        <input type="hidden" name="token" id="token">
        <div>
            <label for="new-password">New password: </label>
            <input type="password" name="password" id="password" required>
        </div>
        <div>
            <label for="confirm-new-password">Confirm new password: </label>
            <input type="password" name="confirm-new-password" id="confirm-new-password" required>
        </div>
        <button type="submit">Reset Password</button>
    </form>
    <p><a href="/api/login">Back to Login</a></p>
    
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const form = document.getElementById('reset-form');

        socket.on('notification', (msg) => {
            alert(msg);
        });

        form.addEventListener('submit', (e) => {
            e.preventDefault();
            const formData = new FormData(form);
            const body = {
                token: formData.get('token'),
                password: formData.get('password')
            };

            fetch('/api/reset-password', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(body)
            })
                .then((res) => res.json())
                .then((data) => {
                    if (data.status === 'OK') {
                        socket.emit('notification', data.message);
                        setTimeout(() => {
                            window.location.href = '/api/login';
                        }, 2000);
                    } else {
                        socket.emit('notification', data.message);
                        setTimeout(() => {
                            window.location.reload();
                        }, 2000);
                    }
                });
        });

        const searchParams = new URLSearchParams(window.location.search);
        const token = document.getElementById('token');
        token.value = searchParams.get('token');
        
        const password = document.getElementById('password');
        const confirmPassword = document.getElementById('confirm-new-password');
        
        function validatePassword() {
            if (password.value !== confirmPassword.value) {
                confirmPassword.setCustomValidity('Password don\'t match');
            } else {
                confirmPassword.setCustomValidity('');
            }
        }
        
        password.onchange = validatePassword;
        confirmPassword.onkeyup = validatePassword;
        </script>
</body>
</html>